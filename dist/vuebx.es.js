import r from"vue";import{cloneDeep as n}from"lodash";function t(r){return n=>{const t={};return function(r){return Array.isArray(r)?r.map(r=>({key:r,val:r})):Object.keys(r).map(n=>({key:n,val:r[n]}))}(n).forEach(({key:n,val:o})=>{t[n]=function(){if(!(o in r))throw Error(`unknown state: ${o}`);return r[o]}}),t}}export default function(o={}){const e=r.observable(o);return[t(e),function(t){return o=>{if("function"==typeof o){const r=n(t);o=o.call(null,r)}return Object.keys(o).forEach(r=>{if(!(r in t))throw Error(`unknown state: ${r}`);t[r]=o[r]}),new Promise(o=>{r.nextTick(()=>{o(n(t))})})}}(e)]}
